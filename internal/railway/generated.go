// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package railway

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// DeploymentDeployment includes the requested fields of the GraphQL type Deployment.
type DeploymentDeployment struct {
	EnvironmentId string `json:"environmentId"`
	ProjectId     string `json:"projectId"`
}

// GetEnvironmentId returns DeploymentDeployment.EnvironmentId, and is useful for accessing the field via an interface.
func (v *DeploymentDeployment) GetEnvironmentId() string { return v.EnvironmentId }

// GetProjectId returns DeploymentDeployment.ProjectId, and is useful for accessing the field via an interface.
func (v *DeploymentDeployment) GetProjectId() string { return v.ProjectId }

// DeploymentResponse is returned by Deployment on success.
type DeploymentResponse struct {
	// Find a single deployment
	Deployment *DeploymentDeployment `json:"deployment"`
}

// GetDeployment returns DeploymentResponse.Deployment, and is useful for accessing the field via an interface.
func (v *DeploymentResponse) GetDeployment() *DeploymentDeployment { return v.Deployment }

// EnvironmentLogsEnvironmentLogsLog includes the requested fields of the GraphQL type Log.
// The GraphQL type's documentation follows.
//
// The result of a logs query.
type EnvironmentLogsEnvironmentLogsLog struct {
	// The attributes that were parsed from a structured log
	Attributes []*EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute `json:"attributes"`
	// The contents of the log message
	Message string `json:"message"`
	// The severity of the log message (eg. err)
	Severity string `json:"severity"`
	// The tags that were associated with the log
	Tags *EnvironmentLogsEnvironmentLogsLogTags `json:"tags"`
	// The timestamp of the log message in format RFC3339 (nano)
	Timestamp string `json:"timestamp"`
}

// GetAttributes returns EnvironmentLogsEnvironmentLogsLog.Attributes, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLog) GetAttributes() []*EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute {
	return v.Attributes
}

// GetMessage returns EnvironmentLogsEnvironmentLogsLog.Message, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLog) GetMessage() string { return v.Message }

// GetSeverity returns EnvironmentLogsEnvironmentLogsLog.Severity, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLog) GetSeverity() string { return v.Severity }

// GetTags returns EnvironmentLogsEnvironmentLogsLog.Tags, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLog) GetTags() *EnvironmentLogsEnvironmentLogsLogTags {
	return v.Tags
}

// GetTimestamp returns EnvironmentLogsEnvironmentLogsLog.Timestamp, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLog) GetTimestamp() string { return v.Timestamp }

// EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute includes the requested fields of the GraphQL type LogAttribute.
// The GraphQL type's documentation follows.
//
// The attributes associated with a structured log
type EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute.Key, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute) GetKey() string { return v.Key }

// GetValue returns EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute.Value, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogAttributesLogAttribute) GetValue() string { return v.Value }

// EnvironmentLogsEnvironmentLogsLogTags includes the requested fields of the GraphQL type LogTags.
// The GraphQL type's documentation follows.
//
// The tags associated with a specific log
type EnvironmentLogsEnvironmentLogsLogTags struct {
	DeploymentId         string `json:"deploymentId"`
	DeploymentInstanceId string `json:"deploymentInstanceId"`
	EnvironmentId        string `json:"environmentId"`
	PluginId             string `json:"pluginId"`
	ProjectId            string `json:"projectId"`
	ServiceId            string `json:"serviceId"`
	SnapshotId           string `json:"snapshotId"`
}

// GetDeploymentId returns EnvironmentLogsEnvironmentLogsLogTags.DeploymentId, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogTags) GetDeploymentId() string { return v.DeploymentId }

// GetDeploymentInstanceId returns EnvironmentLogsEnvironmentLogsLogTags.DeploymentInstanceId, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogTags) GetDeploymentInstanceId() string {
	return v.DeploymentInstanceId
}

// GetEnvironmentId returns EnvironmentLogsEnvironmentLogsLogTags.EnvironmentId, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogTags) GetEnvironmentId() string { return v.EnvironmentId }

// GetPluginId returns EnvironmentLogsEnvironmentLogsLogTags.PluginId, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogTags) GetPluginId() string { return v.PluginId }

// GetProjectId returns EnvironmentLogsEnvironmentLogsLogTags.ProjectId, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogTags) GetProjectId() string { return v.ProjectId }

// GetServiceId returns EnvironmentLogsEnvironmentLogsLogTags.ServiceId, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogTags) GetServiceId() string { return v.ServiceId }

// GetSnapshotId returns EnvironmentLogsEnvironmentLogsLogTags.SnapshotId, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsEnvironmentLogsLogTags) GetSnapshotId() string { return v.SnapshotId }

// EnvironmentLogsResponse is returned by EnvironmentLogs on success.
type EnvironmentLogsResponse struct {
	// Fetch logs for a project environment. Build logs are excluded unless a snapshot ID is explicitly provided in the filter
	EnvironmentLogs []*EnvironmentLogsEnvironmentLogsLog `json:"environmentLogs"`
}

// GetEnvironmentLogs returns EnvironmentLogsResponse.EnvironmentLogs, and is useful for accessing the field via an interface.
func (v *EnvironmentLogsResponse) GetEnvironmentLogs() []*EnvironmentLogsEnvironmentLogsLog {
	return v.EnvironmentLogs
}

// __DeploymentInput is used internally by genqlient
type __DeploymentInput struct {
	Id string `json:"id"`
}

// GetId returns __DeploymentInput.Id, and is useful for accessing the field via an interface.
func (v *__DeploymentInput) GetId() string { return v.Id }

// __EnvironmentLogsInput is used internally by genqlient
type __EnvironmentLogsInput struct {
	AfterLimit    int    `json:"afterLimit"`
	AnchorDate    string `json:"anchorDate"`
	BeforeDate    string `json:"beforeDate"`
	BeforeLimit   int    `json:"beforeLimit"`
	EnvironmentId string `json:"environmentId"`
	Filter        string `json:"filter"`
}

// GetAfterLimit returns __EnvironmentLogsInput.AfterLimit, and is useful for accessing the field via an interface.
func (v *__EnvironmentLogsInput) GetAfterLimit() int { return v.AfterLimit }

// GetAnchorDate returns __EnvironmentLogsInput.AnchorDate, and is useful for accessing the field via an interface.
func (v *__EnvironmentLogsInput) GetAnchorDate() string { return v.AnchorDate }

// GetBeforeDate returns __EnvironmentLogsInput.BeforeDate, and is useful for accessing the field via an interface.
func (v *__EnvironmentLogsInput) GetBeforeDate() string { return v.BeforeDate }

// GetBeforeLimit returns __EnvironmentLogsInput.BeforeLimit, and is useful for accessing the field via an interface.
func (v *__EnvironmentLogsInput) GetBeforeLimit() int { return v.BeforeLimit }

// GetEnvironmentId returns __EnvironmentLogsInput.EnvironmentId, and is useful for accessing the field via an interface.
func (v *__EnvironmentLogsInput) GetEnvironmentId() string { return v.EnvironmentId }

// GetFilter returns __EnvironmentLogsInput.Filter, and is useful for accessing the field via an interface.
func (v *__EnvironmentLogsInput) GetFilter() string { return v.Filter }

// The query executed by Deployment.
const Deployment_Operation = `
query Deployment ($id: String!) {
	deployment(id: $id) {
		environmentId
		projectId
	}
}
`

func Deployment(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *DeploymentResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "Deployment",
		Query:  Deployment_Operation,
		Variables: &__DeploymentInput{
			Id: id,
		},
	}

	data_ = &DeploymentResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by EnvironmentLogs.
const EnvironmentLogs_Operation = `
query EnvironmentLogs ($afterLimit: Int, $anchorDate: String, $beforeDate: String, $beforeLimit: Int, $environmentId: String!, $filter: String) {
	environmentLogs(afterLimit: $afterLimit, beforeDate: $beforeDate, anchorDate: $anchorDate, beforeLimit: $beforeLimit, environmentId: $environmentId, filter: $filter) {
		attributes {
			key
			value
		}
		message
		severity
		tags {
			deploymentId
			deploymentInstanceId
			environmentId
			pluginId
			projectId
			serviceId
			snapshotId
		}
		timestamp
	}
}
`

func EnvironmentLogs(
	ctx_ context.Context,
	client_ graphql.Client,
	afterLimit int,
	anchorDate string,
	beforeDate string,
	beforeLimit int,
	environmentId string,
	filter string,
) (data_ *EnvironmentLogsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "EnvironmentLogs",
		Query:  EnvironmentLogs_Operation,
		Variables: &__EnvironmentLogsInput{
			AfterLimit:    afterLimit,
			AnchorDate:    anchorDate,
			BeforeDate:    beforeDate,
			BeforeLimit:   beforeLimit,
			EnvironmentId: environmentId,
			Filter:        filter,
		},
	}

	data_ = &EnvironmentLogsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
